name: üõ†Ô∏è Test images
on: push
jobs:

  set-constants:
    name: üî† Setting workflow constants
    runs-on: ubuntu-24.04
    outputs:
      FLAVORS: '[ "f", "r", "s" ]'
      VERSIONS: '[ "23.8", "23.7" ]'
      LATEST_VERSION: "23.8"
      RPM_ARCH: '[ "aarch64", "x86_64" ]'
      IMAGE_ARCH: '[ "arm64", "amd64" ]'
    steps:
      - run: echo "setting constants"

  download-install-files:
    name: ‚¨áÔ∏è Download install binaries
    environment: build
    runs-on: ubuntu-24.04
    needs: set-constants
    strategy:
      matrix:
        versions: ${{ fromJSON(needs.set-constants.outputs.VERSIONS) }}
        arch: ${{ fromJSON(needs.set-constants.outputs.RPM_ARCH) }}
    steps:
      - name: ‚¨áÔ∏è Download install file from web
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.FILE_SERVER }} >> ~/.ssh/known_hosts 2>/dev/null
          eval $(ssh-agent)
          ssh-add - <<< "${{ secrets.FILE_USER_AUTH }}"
          scp ${{ secrets.FILE_USER }}@${{ secrets.FILE_SERVER }}:"oracle-database-free-23ai-${{ matrix.versions }}-1.0-1.el8.${{ matrix.arch }}.rpm" .

      - name: üíæ Store install file
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: oracle-database-free-23ai-${{ matrix.versions }}-1.0-1.el8.${{ matrix.arch }}.rpm
          path: oracle-database-free-23ai-${{ matrix.versions }}-1.0-1.el8.${{ matrix.arch }}.rpm

  build-and-test-images:
    name: üõ†Ô∏è üî¨ Build and test images
    runs-on: ${{ matrix.os }}
    environment: build
    needs: [ set-constants, download-install-files ]
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]
        versions: ${{ fromJSON(needs.set-constants.outputs.VERSIONS) }}
        flavors: ${{ fromJSON(needs.set-constants.outputs.FLAVORS) }}
    steps:
      - name: üìÇ Checkout repo
        uses: actions/checkout@v4

      - name: üîÑ Generate environment variables
        id: env_vars
        run: |
          if     [ "${{ matrix.flavors }}" == "f" ]; then image_flavor="-full";
            elif [ "${{ matrix.flavors }}" == "r" ]; then image_flavor="";
            elif [ "${{ matrix.flavors }}" == "s" ]; then image_flavor="-slim";
            else image_flavor="";
          fi;
          echo "IMAGE_FLAVOR=$image_flavor" >> "$GITHUB_OUTPUT"
          os_arch=$(uname -m)
          if     [ "${os_arch}" == "aarch64" ]; then image_arch="arm64";
            elif [ "${os_arch}" == "x86_64" ];  then image_arch="amd64";
            else image_arch="";
          fi;
          echo "IMAGE_ARCH=$image_arch" >> "$GITHUB_OUTPUT"
          echo "OS_ARCH=$os_arch" >> "$GITHUB_OUTPUT"

      - name: ‚è¨ Install build dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get install -y buildah podman
          sudo apt upgrade -y buildah podman

      - name: ‚¨áÔ∏è Download stored install file
        uses: actions/download-artifact@v4
        with:
          name: oracle-database-free-23ai-${{ matrix.versions }}-1.0-1.el8.${{ steps.env_vars.outputs.OS_ARCH }}.rpm

      - name: üõ†Ô∏è Build container image for ${{ matrix.versions }}, flavor "${{ matrix.flavors }}"
        run: ./buildContainerImage.sh -v "${{ matrix.versions }}" -${{ matrix.flavors }}

      - name: üõ†Ô∏è Build faststart container image for ${{ matrix.versions }}, flavor "${{ matrix.flavors }}"
        run: ./buildContainerImage.sh -v "${{ matrix.versions }}" -${{ matrix.flavors }} -x

      - name: üî¨ Test images
        env:
          IMAGE_FLAVOR: ${{ steps.env_vars.outputs.IMAGE_FLAVOR }}
          IMAGE_ARCH: ${{ steps.env_vars.outputs.IMAGE_ARCH }}
        run: |
          cd tests
          ./test-container.sh "gvenzl/oracle-free:${{ matrix.versions }}${IMAGE_FLAVOR}-${IMAGE_ARCH}"
          ./test-container.sh "gvenzl/oracle-free:${{ matrix.versions }}${IMAGE_FLAVOR}-faststart-${IMAGE_ARCH}"
