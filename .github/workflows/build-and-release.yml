name: üõ†Ô∏è Build and release all images
on: workflow_dispatch

jobs:

  set-constants:
    name: üî† Setting workflow constants
    runs-on: ubuntu-24.04
    outputs:
      FLAVORS: '[ "f", "r", "s" ]'
      VERSIONS: '[ "23.7", "23.8" ]'
      LATEST_VERSION: "23.8"
      RPM_ARCH: '[ "aarch64", "x86_64" ]'
      IMAGE_ARCH: '[ "amd64", "arm64" ]'
    steps:
      - run: echo "setting constants"

  download-install-files:
    name: ‚¨áÔ∏è Download install binaries
    environment: build
    runs-on: ubuntu-24.04
    needs: set-constants
    strategy:
      matrix:
        versions: ${{ fromJSON(needs.set-constants.outputs.VERSIONS) }}
        arch: ${{ fromJSON(needs.set-constants.outputs.RPM_ARCH) }}
    steps:
      - name: ‚¨áÔ∏è Download install file from web
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.FILE_SERVER }} >> ~/.ssh/known_hosts 2>/dev/null
          eval $(ssh-agent)
          ssh-add - <<< "${{ secrets.FILE_USER_AUTH }}"
          scp ${{ secrets.FILE_USER }}@${{ secrets.FILE_SERVER }}:"oracle-database-free-23ai-${{ matrix.versions }}-1.0-1.el8.${{ matrix.arch }}.rpm" .

      - name: üíæ Store install file
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: oracle-database-free-23ai-${{ matrix.versions }}-1.0-1.el8.${{ matrix.arch }}.rpm
          path: oracle-database-free-23ai-${{ matrix.versions }}-1.0-1.el8.${{ matrix.arch }}.rpm

  build-and-test-images:
    name: üõ†Ô∏è üî¨ Build and test images
    runs-on: ${{ matrix.os }}
    environment: build
    needs: [ set-constants, download-install-files ]
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]
        versions: ${{ fromJSON(needs.set-constants.outputs.VERSIONS) }}
        flavors: ${{ fromJSON(needs.set-constants.outputs.FLAVORS) }}
    steps:
      - name: üìÇ Checkout repo
        uses: actions/checkout@v4

      - name: üîÑ Generate environment variables
        id: env_vars
        run: |
          if     [ "${{ matrix.flavors }}" == "f" ]; then image_flavor="-full";
            elif [ "${{ matrix.flavors }}" == "r" ]; then image_flavor="";
            elif [ "${{ matrix.flavors }}" == "s" ]; then image_flavor="-slim";
            else image_flavor="";
          fi;
          echo "IMAGE_FLAVOR=$image_flavor" >> "$GITHUB_OUTPUT"
          os_arch=$(uname -m)
          if     [ "${os_arch}" == "aarch64" ]; then image_arch="arm64";
            elif [ "${os_arch}" == "x86_64" ];  then image_arch="amd64";
            else image_arch="";
          fi;
          echo "IMAGE_ARCH=$image_arch" >> "$GITHUB_OUTPUT"
          echo "OS_ARCH=$os_arch" >> "$GITHUB_OUTPUT"

      - name: ‚è¨ Install build dependencies
        run: sudo apt-get install -y buildah podman

      - name: ‚¨áÔ∏è Download stored install file
        uses: actions/download-artifact@v4
        with:
          name: oracle-database-free-23ai-${{ matrix.versions }}-1.0-1.el8.${{ steps.env_vars.outputs.OS_ARCH }}.rpm

      - name: üõ†Ô∏è Build container image for ${{ matrix.versions }}, flavor "${{ matrix.flavors }}"
        run: ./buildContainerImage.sh -v "${{ matrix.versions }}" -${{ matrix.flavors }}

      - name: üõ†Ô∏è Build faststart container image for ${{ matrix.versions }}, flavor "${{ matrix.flavors }}"
        run: ./buildContainerImage.sh -v "${{ matrix.versions }}" -${{ matrix.flavors }} -x

      - name: üî¨ Test images
        env:
          IMAGE_FLAVOR: ${{ steps.env_vars.outputs.IMAGE_FLAVOR }}
          IMAGE_ARCH: ${{ steps.env_vars.outputs.IMAGE_ARCH }}
        run: |
          cd tests
          ./test-container.sh "gvenzl/oracle-free:${{ matrix.versions }}${IMAGE_FLAVOR}-${IMAGE_ARCH}"
          ./test-container.sh "gvenzl/oracle-free:${{ matrix.versions }}${IMAGE_FLAVOR}-faststart-${IMAGE_ARCH}"

      - name: üì§ Export images to local file system
        env:
          IMAGE_FLAVOR: ${{ steps.env_vars.outputs.IMAGE_FLAVOR }}
          IMAGE_ARCH: ${{ steps.env_vars.outputs.IMAGE_ARCH }}
        run: |
          podman save -o "oracle-free-${{ matrix.versions }}${IMAGE_FLAVOR}-${IMAGE_ARCH}.tar" "localhost/gvenzl/oracle-free:${{ matrix.versions }}${IMAGE_FLAVOR}-${IMAGE_ARCH}"
          podman save -o "oracle-free-${{ matrix.versions }}${IMAGE_FLAVOR}-faststart-${IMAGE_ARCH}.tar" "localhost/gvenzl/oracle-free:${{ matrix.versions }}${IMAGE_FLAVOR}-faststart-${IMAGE_ARCH}"

      - name: ‚¨ÜÔ∏è Upload image non-faststart image for deploy job
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: oracle-free-${{ matrix.versions }}${{ steps.env_vars.outputs.IMAGE_FLAVOR }}-${{ steps.env_vars.outputs.IMAGE_ARCH }}
          path: oracle-free-${{ matrix.versions }}${{ steps.env_vars.outputs.IMAGE_FLAVOR }}-${{ steps.env_vars.outputs.IMAGE_ARCH }}.tar

      - name: ‚¨ÜÔ∏è Upload image faststart image for deploy job
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: oracle-free-${{ matrix.versions }}${{ steps.env_vars.outputs.IMAGE_FLAVOR }}-faststart-${{ steps.env_vars.outputs.IMAGE_ARCH }}
          path: oracle-free-${{ matrix.versions }}${{ steps.env_vars.outputs.IMAGE_FLAVOR }}-faststart-${{ steps.env_vars.outputs.IMAGE_ARCH }}.tar

  upload-platform-images:
    name: ‚¨ÜÔ∏è üìã Upload platform images to registries
    environment: upload
    runs-on: ubuntu-24.04
    needs: [ set-constants, build-and-test-images ]

    permissions:
      packages: write

    strategy:
      matrix:
        repository: [ "ghcr.io/${{ github.repository_owner }}", "docker.io/${{ github.repository_owner }}" ]
        versions: ${{ fromJSON(needs.set-constants.outputs.VERSIONS) }}
        arch: ${{ fromJSON(needs.set-constants.outputs.IMAGE_ARCH) }}
        flavor: [ "-full", "", "-slim" ] # "" is the "regular" image

    steps:
      - name: ‚è¨ Install build dependencies
        run: sudo apt-get install -y buildah podman

      - name: ‚¨áÔ∏è Download non-faststart image
        uses: actions/download-artifact@v4
        with:
          name: oracle-free-${{ matrix.versions }}${{ matrix.flavor }}-${{ matrix.arch }}

      - name: ‚¨áÔ∏è Download faststart image
        uses: actions/download-artifact@v4
        with:
          name: oracle-free-${{ matrix.versions }}${{ matrix.flavor }}-faststart-${{ matrix.arch }}

      - name: üì• Import images
        run: |
          podman load -i oracle-free-${{ matrix.versions }}${{ matrix.flavor }}-${{ matrix.arch }}.tar
          podman load -i oracle-free-${{ matrix.versions }}${{ matrix.flavor }}-faststart-${{ matrix.arch }}.tar

      - name: üîì Login to GHCR registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: üîì Login to Docker.io registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.DH_USER }}
          password: ${{ secrets.DH_PWD }}
          registry: docker.io

      - name: ü´∏ Push non-faststart image to Container Registry
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ${{ matrix.repository }}
          image: oracle-free
          tags: ${{ matrix.versions }}${{ matrix.flavor }}-${{ matrix.arch }}

      - name: ü´∏ Push faststart image to  Container Registry
        id: push-faststart-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ${{ matrix.repository }}
          image: oracle-free
          tags: ${{ matrix.versions }}${{ matrix.flavor }}-faststart-${{ matrix.arch }}

  create-latest-version-tags:
    name: ‚¨ÜÔ∏è üìã Upload latest images to registries
    environment: tag
    runs-on: ubuntu-24.04
    needs: [ set-constants, upload-platform-images ]

    permissions:
      packages: write

    strategy:
      matrix:
        repository: [ "ghcr.io/${{ github.repository_owner }}", "docker.io/${{ github.repository_owner }}" ]
        arch: ${{ fromJSON(needs.set-constants.outputs.IMAGE_ARCH) }}
        flavor: [ "-full", "", "-slim" ] # "" is the "regular" image

    steps:
      - name: ‚è¨ Install build dependencies
        run: sudo apt-get install -y buildah podman

      - name: ‚¨áÔ∏è Download non-faststart image
        uses: actions/download-artifact@v4
        with:
          name: oracle-free-${{ fromJSON(needs.set-constants.outputs.LATEST_VERSION) }}${{ matrix.flavor }}-${{ matrix.arch }}

      - name: ‚¨áÔ∏è Download faststart image
        uses: actions/download-artifact@v4
        with:
          name: oracle-free-${{ fromJSON(needs.set-constants.outputs.LATEST_VERSION) }}${{ matrix.flavor }}-faststart-${{ matrix.arch }}

      - name: üì• Import images
        run: |
          podman load -i oracle-free-${{ fromJSON(needs.set-constants.outputs.LATEST_VERSION) }}${{ matrix.flavor }}-${{ matrix.arch }}.tar
          podman load -i oracle-free-${{ fromJSON(needs.set-constants.outputs.LATEST_VERSION) }}${{ matrix.flavor }}-faststart-${{ matrix.arch }}.tar

      - name: üè∑Ô∏è Tag images
        id: tag-images
        env:
          LATEST_VERSION: ${{ fromJSON(needs.set-constants.outputs.LATEST_VERSION) }}
          FLAVOR: ${{ matrix.flavor }}
          ARCH: ${{ matrix.arch }}
        run: |
          # Tag 23[-full | -slim][-faststart]
          podman tag gvenzl/oracle-free:${LATEST_VERSION}${FLAVOR}-${ARCH} oracle-free:23${FLAVOR}-${ARCH}
          podman tag gvenzl/oracle-free:${LATEST_VERSION}${FLAVOR}-faststart-${ARCH} oracle-free:23${FLAVOR}-faststart-${ARCH}

          # Tag [-latest] or [-slim | -full]
          if [[ "${FLAVOR}" == "" ]]; then # regular image
            FLAVOR_NO_DASH="latest"
            podman tag gvenzl/oracle-free:${LATEST_VERSION}-${ARCH} oracle-free:${FLAVOR_NO_DASH}-${ARCH}
            podman tag gvenzl/oracle-free:${LATEST_VERSION}-faststart-${ARCH} oracle-free:${FLAVOR_NO_DASH}-faststart-${ARCH}
          else
            FLAVOR_NO_DASH=${FLAVOR:1}
            podman tag gvenzl/oracle-free:${LATEST_VERSION}${FLAVOR}-${ARCH} oracle-free:${FLAVOR_NO_DASH}-${ARCH}
            podman tag gvenzl/oracle-free:${LATEST_VERSION}${FLAVOR}-faststart-${ARCH} oracle-free:${FLAVOR_NO_DASH}-faststart-${ARCH}
          fi;
          # Store value for push
          echo "FLAVOR_NO_DASH=${FLAVOR_NO_DASH}" >> $GITHUB_OUTPUT

      - name: üîì Login to GHCR registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: üîì Login to Docker.io registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.DH_USER }}
          password: ${{ secrets.DH_PWD }}
          registry: docker.io

      - name: ü´∏ Push 23 non-faststart image to Container Registry
        id: push-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ${{ matrix.repository }}
          image: oracle-free
          tags: 23${{ matrix.flavor }}-${{ matrix.arch }}

      - name: ü´∏ Push 23 faststart image to Container Registry
        id: push-faststart-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ${{ matrix.repository }}
          image: oracle-free
          tags: 23${{ matrix.flavor }}-faststart-${{ matrix.arch }}

      - name: ü´∏ Push versionless image to GitHub Container Registry
        id: push-versionless-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ${{ matrix.repository }}
          image: oracle-free
          tags: ${{ steps.tag-images.outputs.FLAVOR_NO_DASH }}-${{ matrix.arch }}

      - name: ü´∏ Push versionless faststart image to GitHub Container Registry
        id: push-versionless-faststart-to-ghcr
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ${{ matrix.repository }}
          image: oracle-free
          tags: ${{ steps.tag-images.outputs.FLAVOR_NO_DASH }}-faststart-${{ matrix.arch }}

  create-versioned-manifests-tags:
    name: üìã Create versioned manifests to registries
    environment: tag
    runs-on: ubuntu-24.04
    needs: [ set-constants, create-latest-version-tags ]
    strategy:
      matrix:
        repository: [ "ghcr.io/${{ github.repository_owner }}", "docker.io/${{ github.repository_owner }}" ]
        version: ${{ fromJSON(needs.set-constants.outputs.VERSIONS) }}
        image_flavor: [ "-full", "", "-slim" ]
        image_faststart: [ "-faststart", "" ]

    permissions:
      packages: write

    steps:

      - name: üîì Login to GHCR registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: üîì Login to Docker.io registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.DH_USER }}
          password: ${{ secrets.DH_PWD }}
          registry: docker.io

      - name: ü´∏ Push multi-arch manifest
        run: |
          podman manifest create ${{ matrix.repository }}/oracle-free:${{ matrix.version }}${{ matrix.image_flavor }}${{ matrix.image_faststart }}
          podman manifest add ${{ matrix.repository }}/oracle-free:${{ matrix.version }}${{ matrix.image_flavor }}${{ matrix.image_faststart }} \
                              ${{ matrix.repository }}/oracle-free:${{ matrix.version }}${{ matrix.image_flavor }}${{ matrix.image_faststart }}-amd64
          podman manifest add ${{ matrix.repository }}/oracle-free:${{ matrix.version }}${{ matrix.image_flavor }}${{ matrix.image_faststart }} \
                              ${{ matrix.repository }}/oracle-free:${{ matrix.version }}${{ matrix.image_flavor }}${{ matrix.image_faststart }}-arm64
          podman push ${{ matrix.repository }}/oracle-free:${{ matrix.version }}${{ matrix.image_flavor }}${{ matrix.image_faststart }}
          podman manifest rm ${{ matrix.repository }}/oracle-free:${{ matrix.version }}${{ matrix.image_flavor }}${{ matrix.image_faststart }}

  create-23-manifests-tags:
    name: üìã Create 23 manifests to registries
    environment: tag
    runs-on: ubuntu-24.04
    needs: [ set-constants, create-versioned-manifests-tags, create-latest-version-tags ]
    strategy:
      matrix:
        repository: [ "ghcr.io/${{ github.repository_owner }}", "docker.io/${{ github.repository_owner }}" ]
        image_flavor: [ "-full", "", "-slim" ]
        image_faststart: [ "-faststart", "" ]

    permissions:
      packages: write

    steps:

      - name: üîì Login to GHCR registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: üîì Login to Docker.io registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.DH_USER }}
          password: ${{ secrets.DH_PWD }}
          registry: docker.io

      - name: ü´∏ Push multi-arch manifest
        run: |
          podman manifest create ${{ matrix.repository }}/oracle-free:23${{ matrix.image_flavor }}${{ matrix.image_faststart }}
          podman manifest add ${{ matrix.repository }}/oracle-free:23${{ matrix.image_flavor }}${{ matrix.image_faststart }} \
                              ${{ matrix.repository }}/oracle-free:23${{ matrix.image_flavor }}${{ matrix.image_faststart }}-amd64
          podman manifest add ${{ matrix.repository }}/oracle-free:23${{ matrix.image_flavor }}${{ matrix.image_faststart }} \
                              ${{ matrix.repository }}/oracle-free:23${{ matrix.image_flavor }}${{ matrix.image_faststart }}-arm64
          podman push ${{ matrix.repository }}/oracle-free:23${{ matrix.image_flavor }}${{ matrix.image_faststart }}
          podman manifest rm ${{ matrix.repository }}/oracle-free:23${{ matrix.image_flavor }}${{ matrix.image_faststart }}

  create-latest-manifests-tags:
    name: üìã Create latest manifests to registries
    environment: tag
    runs-on: ubuntu-24.04
    needs: [ set-constants, create-23-manifests-tags, create-versioned-manifests-tags, create-latest-version-tags ]
    strategy:
      matrix:
        repository: [ "ghcr.io/${{ github.repository_owner }}", "docker.io/${{ github.repository_owner }}" ]
        image_flavor: [ "full", "latest", "slim" ]
        image_faststart: [ "-faststart", "" ]

    permissions:
      packages: write

    steps:

      - name: üîì Login to GHCR registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: üîì Login to Docker.io registry
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.DH_USER }}
          password: ${{ secrets.DH_PWD }}
          registry: docker.io

      - name: ü´∏ Push multi-arch manifest
        run: |
          podman manifest create ${{ matrix.repository }}/oracle-free:${{ matrix.image_flavor }}${{ matrix.image_faststart }}
          podman manifest add ${{ matrix.repository }}/oracle-free:${{ matrix.image_flavor }}${{ matrix.image_faststart }} \
                              ${{ matrix.repository }}/oracle-free:${{ matrix.image_flavor }}${{ matrix.image_faststart }}-amd64
          podman manifest add ${{ matrix.repository }}/oracle-free:${{ matrix.image_flavor }}${{ matrix.image_faststart }} \
                              ${{ matrix.repository }}/oracle-free:${{ matrix.image_flavor }}${{ matrix.image_faststart }}-arm64
          podman push ${{ matrix.repository }}/oracle-free:${{ matrix.image_flavor }}${{ matrix.image_faststart }}
          podman manifest rm ${{ matrix.repository }}/oracle-free:${{ matrix.image_flavor }}${{ matrix.image_faststart }}

  cleanup:
    name: üßπ Cleanup build leftovers
    runs-on: ubuntu-24.04
    needs: [ create-latest-manifests-tags, create-23-manifests-tags, create-versioned-manifests-tags ]
    permissions:
      deployments: write

    steps:
      - name: üßπ Cleanup build deployments
        uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: build
          onlyRemoveDeployments: true

      - name: üßπ Cleanup upload deployments
        uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: upload
          onlyRemoveDeployments: true

      - name: üßπ Cleanup tag deployments
        uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: tag
          onlyRemoveDeployments: true
